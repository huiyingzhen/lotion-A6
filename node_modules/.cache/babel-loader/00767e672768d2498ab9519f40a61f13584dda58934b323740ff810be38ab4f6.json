{"ast":null,"code":"var _jsxFileName = \"/Users/huiyingzhen/Desktop/ENSF 381/assignment-06-lotion-huiyingzhen/src/Edit.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useOutletContext, useParams } from \"react-router-dom\";\nimport DateTimeP from 'react-datetime-picker';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Edit() {\n  _s();\n  const [getActiveNote, notes] = useOutletContext();\n  const {\n    id\n  } = useParams();\n  const [note, setNote] = useState(null);\n  const [noteId, setNoteId] = useState(id);\n\n  /*useEffect(() => {\n      const notes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n      const index = notes.findIndex((n) => n.id === noteId);\n      if (index >= 0) {\n        const activeNote = notes[index];\n        setNote(activeNote);\n        getActiveNote(activeNote);\n      }\n    }, [noteId, getActiveNote]);\n  \n    useEffect(() => {\n      if (notes) {\n        const index = notes.findIndex((n) => n.id === noteId);\n        if (index >= 0) {\n          setNote(notes[index]);\n        }\n      }\n    }, [noteId, notes]);\n  \n    useEffect(() => {\n      if (note) {\n        const notes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n        const index = notes.findIndex((n) => n.id === note.id);\n        if (index >= 0) {\n          notes[index] = note;\n        } else {\n          notes.push(note);\n        }\n        localStorage.setItem(\"notes\", JSON.stringify(notes));\n      }\n    }, [note]);*/\n  useEffect(() => {\n    const notes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n    const index = notes.findIndex(n => n.id === id);\n    if (index >= 0) {\n      setNote(notes[index]);\n    }\n  }, [id]);\n  useEffect(() => {\n    if (notes) {\n      const index = notes.findIndex(n => n.id === id);\n      if (index >= 0) {\n        setNote(notes[index]);\n      }\n    }\n  }, [id, notes]);\n  useEffect(() => {\n    if (note) {\n      const notes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n      const index = notes.findIndex(n => n.id === note.id);\n      if (index >= 0) {\n        notes[index] = note;\n      } else {\n        notes.push(note);\n      }\n      localStorage.setItem(\"notes\", JSON.stringify(notes));\n    }\n  }, [note]);\n  /*useEffect(() => {\n      const notes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n      const index = notes.findIndex((n) => n.id === id);\n      if(index >= 0){\n          setNote(notes[index]);\n      }\n  }, [id]);*/\n\n  /*useEffect(() => {\n      if(notes){\n          const index = notes.findIndex((n) => n.id === id);\n          if(index >= 0){\n              setNote(notes[index]);\n          }\n      }\n  }, [id, notes]);*/\n  /*useEffect(() => {\n      if (note) {\n        const notes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n        const index = notes.findIndex((n) => n.id === note.id);\n        if (index >= 0) {\n          notes[index] = note;\n        } else {\n          notes.push(note);\n        }\n        localStorage.setItem(\"notes\", JSON.stringify(notes));\n      }\n    }, [note]);*/\n\n  const handleTitleChange = event => {\n    setNote({\n      ...note,\n      title: event.target.value,\n      lastModified: new Date().toLocaleString()\n    });\n  };\n  const handleContentChange = content => {\n    setNote({\n      ...note,\n      content,\n      lastModified: new Date().toLocaleString()\n    });\n  };\n\n  /*const handleSave = () => {\n      const notes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n      const index = notes.findIndex((n) => n.id === note.id);\n      if(index >= 0){\n          notes[index] = note;\n      }else{\n          notes.push(note);\n      }\n      localStorage.setItem(\"notes\", JSON.stringify(notes));\n      setIsEditMode(false);\n  }*/\n  const handleSave = () => {\n    const notes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n    const index = notes.findIndex(n => n.id === note.id);\n    if (index >= 0) {\n      // Update the existing note in the sidebar list with the new content\n      notes[index] = note;\n    } else {\n      notes.push(note);\n    }\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n    setIsEditMode(false);\n\n    // Set the new note as the active note in the outlet context\n    getActiveNote(note);\n  };\n\n  /*const handleDelete = () => {\n      const notes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n      const index = notes.findIndex((n) => n.id === note.id);\n      if (index >= 0) {\n        const confirmation = window.confirm(\"Are you sure you want to delete this note?\");\n        if (confirmation) {\n          notes.splice(index, 1);\n          localStorage.setItem(\"notes\", JSON.stringify(notes));\n          const nextNoteIndex = index === notes.length ? index - 1 : index;\n          const nextNoteId = nextNoteIndex >= 0 ? notes[nextNoteIndex].id : '';\n          setNoteId(nextNoteId);\n        }\n      }\n    };*/\n\n  /*const handleDelete = () => {\n      const notes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n      const index = notes.findIndex((n) => n.id === note.id);\n      if(index >= 0){\n          notes.splice(index, 1);\n          localStorage.setItem(\"notes\", JSON.stringify(notes));\n          const nextNoteIndex = index === notes.length ? index - 1 : index;\n          const nextNoteId = nextNoteIndex >= 0 ? notes[nextNoteIndex].id : '';\n          window.location.replace(`/notes/${nextNoteId}`);\n      }\n  };*/\n\n  const [isEditMode, setIsEditMode] = useState(true);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: notes && notes.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-notes\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-header\",\n        children: [isEditMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-title\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: note === null || note === void 0 ? void 0 : note.title,\n              onChange: handleTitleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(DateTimeP, {\n              value: new Date(),\n              onChange: () => {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-title\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              type: \"text\",\n              value: note.title,\n              onChange: handleTitleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(DateTimeP, {\n              value: new Date(),\n              onChange: () => {},\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-right\",\n          children: [isEditMode ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"header-buttons\",\n            onClick: handleSave,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"header-buttons\",\n            onClick: () => setIsEditMode(true),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"header-buttons\",\n            onClick: () => handleDelete(note.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }, this), isEditMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-quill\",\n        children: /*#__PURE__*/_jsxDEV(ReactQuill, {\n          theme: \"snow\",\n          value: note === null || note === void 0 ? void 0 : note.content,\n          onChange: handleContentChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-note\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.content.toString().replace(/(<([^>]+)>)/ig, '')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No notes yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 21\n    }, this)\n  }, void 0, false);\n}\n_s(Edit, \"a3++c25p5Rn556IpGQcZ956OsHQ=\", false, function () {\n  return [useOutletContext, useParams];\n});\n_c = Edit;\nexport default Edit;\nvar _c;\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"names":["useEffect","useState","useOutletContext","useParams","DateTimeP","ReactQuill","jsxDEV","_jsxDEV","Fragment","_Fragment","Edit","_s","getActiveNote","notes","id","note","setNote","noteId","setNoteId","JSON","parse","localStorage","getItem","index","findIndex","n","push","setItem","stringify","handleTitleChange","event","title","target","value","lastModified","Date","toLocaleString","handleContentChange","content","handleSave","setIsEditMode","isEditMode","children","length","className","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","readOnly","onClick","handleDelete","theme","toString","replace","_c","$RefreshReg$"],"sources":["/Users/huiyingzhen/Desktop/ENSF 381/assignment-06-lotion-huiyingzhen/src/Edit.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useOutletContext, useParams } from \"react-router-dom\";\nimport DateTimeP from 'react-datetime-picker';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\nfunction Edit(){\n    const [ getActiveNote, notes] = useOutletContext(); \n    const { id } = useParams();\n    const [note, setNote] = useState(null);\n    const [noteId, setNoteId] = useState(id);\n\n    /*useEffect(() => {\n        const notes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n        const index = notes.findIndex((n) => n.id === noteId);\n        if (index >= 0) {\n          const activeNote = notes[index];\n          setNote(activeNote);\n          getActiveNote(activeNote);\n        }\n      }, [noteId, getActiveNote]);\n    \n      useEffect(() => {\n        if (notes) {\n          const index = notes.findIndex((n) => n.id === noteId);\n          if (index >= 0) {\n            setNote(notes[index]);\n          }\n        }\n      }, [noteId, notes]);\n    \n      useEffect(() => {\n        if (note) {\n          const notes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n          const index = notes.findIndex((n) => n.id === note.id);\n          if (index >= 0) {\n            notes[index] = note;\n          } else {\n            notes.push(note);\n          }\n          localStorage.setItem(\"notes\", JSON.stringify(notes));\n        }\n      }, [note]);*/\n    useEffect(() => {\n        const notes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n        const index = notes.findIndex((n) => n.id === id);\n        if(index >= 0){\n            setNote(notes[index]);\n        }\n    }, [id]);\n\n    useEffect(() => {\n        if (notes) {\n            const index = notes.findIndex((n) => n.id === id);\n            if (index >= 0) {\n                setNote(notes[index]);\n            }\n        }\n    }, [id, notes]);\n\n    useEffect(() => {\n        if (note) {\n            const notes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n            const index = notes.findIndex((n) => n.id === note.id);\n            if (index >= 0) {\n                notes[index] = note;\n            } else {\n                notes.push(note);\n            }\n            localStorage.setItem(\"notes\", JSON.stringify(notes));\n        }\n    }, [note]);\n    /*useEffect(() => {\n        const notes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n        const index = notes.findIndex((n) => n.id === id);\n        if(index >= 0){\n            setNote(notes[index]);\n        }\n    }, [id]);*/\n\n    /*useEffect(() => {\n        if(notes){\n            const index = notes.findIndex((n) => n.id === id);\n            if(index >= 0){\n                setNote(notes[index]);\n            }\n        }\n    }, [id, notes]);*/\n    /*useEffect(() => {\n        if (note) {\n          const notes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n          const index = notes.findIndex((n) => n.id === note.id);\n          if (index >= 0) {\n            notes[index] = note;\n          } else {\n            notes.push(note);\n          }\n          localStorage.setItem(\"notes\", JSON.stringify(notes));\n        }\n      }, [note]);*/\n\n    const handleTitleChange = (event) => {\n        setNote({\n            ...note,\n            title: event.target.value,\n            lastModified: new Date().toLocaleString(),\n        });\n    };\n\n    const handleContentChange = (content) => {\n        setNote({\n            ...note,\n            content,\n            lastModified: new Date().toLocaleString(),\n        });\n    };\n\n    /*const handleSave = () => {\n        const notes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n        const index = notes.findIndex((n) => n.id === note.id);\n        if(index >= 0){\n            notes[index] = note;\n        }else{\n            notes.push(note);\n        }\n        localStorage.setItem(\"notes\", JSON.stringify(notes));\n        setIsEditMode(false);\n    }*/\n    const handleSave = () => {\n        const notes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n        const index = notes.findIndex((n) => n.id === note.id);\n        if (index >= 0) {\n            // Update the existing note in the sidebar list with the new content\n            notes[index] = note;\n        } else {\n\n            notes.push(note);\n        }\n        localStorage.setItem(\"notes\", JSON.stringify(notes));\n        setIsEditMode(false);\n        \n        // Set the new note as the active note in the outlet context\n        getActiveNote(note);\n    }\n\n    /*const handleDelete = () => {\n        const notes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n        const index = notes.findIndex((n) => n.id === note.id);\n        if (index >= 0) {\n          const confirmation = window.confirm(\"Are you sure you want to delete this note?\");\n          if (confirmation) {\n            notes.splice(index, 1);\n            localStorage.setItem(\"notes\", JSON.stringify(notes));\n            const nextNoteIndex = index === notes.length ? index - 1 : index;\n            const nextNoteId = nextNoteIndex >= 0 ? notes[nextNoteIndex].id : '';\n            setNoteId(nextNoteId);\n          }\n        }\n      };*/\n\n    /*const handleDelete = () => {\n        const notes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n        const index = notes.findIndex((n) => n.id === note.id);\n        if(index >= 0){\n            notes.splice(index, 1);\n            localStorage.setItem(\"notes\", JSON.stringify(notes));\n            const nextNoteIndex = index === notes.length ? index - 1 : index;\n            const nextNoteId = nextNoteIndex >= 0 ? notes[nextNoteIndex].id : '';\n            window.location.replace(`/notes/${nextNoteId}`);\n        }\n    };*/\n\n    const [isEditMode, setIsEditMode] = useState(true);\n\n    return(\n        <>\n        {notes && notes.length > 0 ? (\n                    <div className=\"main-notes\">\n                    <div className=\"main-header\">\n                        {isEditMode ? (\n                            <div className=\"header-left\">\n                                <div className=\"header-title\">\n                                    <input type=\"text\" value={note?.title} onChange={handleTitleChange}></input>\n                                </div>\n                                <div >\n                                    <DateTimeP value={new Date()} onChange={() => {}}/>\n                                </div>\n                            </div>\n                        ) : (\n                            <div className=\"header-left\">\n                            <div className=\"header-title\">\n                                <p type=\"text\" value={note.title} onChange={handleTitleChange}></p>\n                            </div>\n                            <div>\n                                <DateTimeP value={new Date()} onChange={() => {}} readOnly />\n                            </div>\n                        </div>\n                        )}\n        \n                        <div className=\"header-right\">\n                            {isEditMode ? (\n                                <button className=\"header-buttons\" onClick={handleSave}>Save</button>\n                            ) : (\n                                <button className=\"header-buttons\" onClick={() => setIsEditMode(true)}>Edit</button>\n                            )}\n                            <button className=\"header-buttons\" onClick={() => handleDelete(note.id)}>Delete</button>\n                        </div>\n                    </div>\n        \n                    {isEditMode ? (\n                        <div className=\"main-quill\">\n                            <ReactQuill theme=\"snow\" value={note?.content} onChange={handleContentChange}/>\n                        </div>\n                    ) : (\n                        <div className=\"main-note\">\n                            <p>{note.content.toString().replace( /(<([^>]+)>)/ig, '')}</p>\n                        </div>\n                    )}\n                </div>) : (\n                    <div>No notes yet.</div>\n        )}\n\n        </>\n    )\n}\n\nexport default Edit;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}