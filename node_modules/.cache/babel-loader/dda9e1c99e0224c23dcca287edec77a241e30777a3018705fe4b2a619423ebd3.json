{"ast":null,"code":"var _jsxFileName = \"/Users/huiyingzhen/Desktop/ENSF 381/assignment-06-lotion-huiyingzhen/src/Edit.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useOutletContext, useParams } from \"react-router-dom\";\nimport DateTimeP from 'react-datetime-picker';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Edit() {\n  _s();\n  const [getActiveNote, notes] = useOutletContext();\n  const {\n    id\n  } = useParams();\n  const [note, setNote] = useState(null);\n  useEffect(() => {\n    const notes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n    const index = notes.findIndex(n => n.id === id);\n    if (index >= 0) {\n      setNote(notes[index]);\n    }\n  }, [id]);\n  useEffect(() => {\n    if (notes) {\n      const index = notes.findIndex(n => n.id === id);\n      if (index >= 0) {\n        setNote(notes[index]);\n      }\n    }\n  }, [id, notes]);\n  useEffect(() => {\n    if (note) {\n      const notes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n      const index = notes.findIndex(n => n.id === note.id);\n      if (index >= 0) {\n        notes[index] = note;\n      } else {\n        notes.push(note);\n      }\n      localStorage.setItem(\"notes\", JSON.stringify(notes));\n    }\n  }, [note]);\n  /*useEffect(() => {\n      const notes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n      const index = notes.findIndex((n) => n.id === id);\n      if(index >= 0){\n          setNote(notes[index]);\n      }\n  }, [id]);*/\n\n  /*useEffect(() => {\n      if(notes){\n          const index = notes.findIndex((n) => n.id === id);\n          if(index >= 0){\n              setNote(notes[index]);\n          }\n      }\n  }, [id, notes]);*/\n  /*useEffect(() => {\n      if (note) {\n        const notes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n        const index = notes.findIndex((n) => n.id === note.id);\n        if (index >= 0) {\n          notes[index] = note;\n        } else {\n          notes.push(note);\n        }\n        localStorage.setItem(\"notes\", JSON.stringify(notes));\n      }\n    }, [note]);*/\n\n  const handleTitleChange = event => {\n    setNote({\n      ...note,\n      title: event.target.value,\n      lastModified: new Date().toLocaleString()\n    });\n  };\n  const handleContentChange = content => {\n    setNote({\n      ...note,\n      content,\n      lastModified: new Date().toLocaleString()\n    });\n  };\n\n  /*const handleSave = () => {\n      const notes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n      const index = notes.findIndex((n) => n.id === note.id);\n      if(index >= 0){\n          notes[index] = note;\n      }else{\n          notes.push(note);\n      }\n      localStorage.setItem(\"notes\", JSON.stringify(notes));\n      setIsEditMode(false);\n  }*/\n  const handleSave = () => {\n    const notes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n    const index = notes.findIndex(n => n.id === note.id);\n    if (index >= 0) {\n      // Update the existing note in the sidebar list with the new content\n      notes[index] = note;\n    } else {\n      notes.push(note);\n    }\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n    setIsEditMode(false);\n\n    // Set the new note as the active note in the outlet context\n    getActiveNote(note);\n  };\n  const handleDelete = () => {\n    const notes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n    const index = notes.findIndex(n => n.id === note.id);\n    if (index >= 0) {\n      const confirmation = window.confirm(\"Are you sure you want to delete this note?\");\n      if (confirmation) {\n        notes.splice(index, 1);\n        localStorage.setItem(\"notes\", JSON.stringify(notes));\n        const nextNoteIndex = index === notes.length ? index - 1 : index;\n        const nextNoteId = nextNoteIndex >= 0 ? notes[nextNoteIndex].id : '';\n        setNoteId(nextNoteId);\n      }\n    }\n  };\n\n  /*const handleDelete = () => {\n      const notes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n      const index = notes.findIndex((n) => n.id === note.id);\n      if(index >= 0){\n          notes.splice(index, 1);\n          localStorage.setItem(\"notes\", JSON.stringify(notes));\n          const nextNoteIndex = index === notes.length ? index - 1 : index;\n          const nextNoteId = nextNoteIndex >= 0 ? notes[nextNoteIndex].id : '';\n          window.location.replace(`/notes/${nextNoteId}`);\n      }\n  };*/\n\n  const [isEditMode, setIsEditMode] = useState(true);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: notes && notes.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-notes\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-header\",\n        children: [isEditMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-title\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: note === null || note === void 0 ? void 0 : note.title,\n              onChange: handleTitleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(DateTimeP, {\n              value: new Date(),\n              onChange: () => {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-title\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              type: \"text\",\n              value: note.title,\n              onChange: handleTitleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(DateTimeP, {\n              value: new Date(),\n              onChange: () => {},\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-right\",\n          children: [isEditMode ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"header-buttons\",\n            onClick: handleSave,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"header-buttons\",\n            onClick: () => setIsEditMode(true),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"header-buttons\",\n            onClick: () => handleDelete(note.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }, this), isEditMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-quill\",\n        children: /*#__PURE__*/_jsxDEV(ReactQuill, {\n          theme: \"snow\",\n          value: note === null || note === void 0 ? void 0 : note.content,\n          onChange: handleContentChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-note\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.content.toString().replace(/(<([^>]+)>)/ig, '')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No notes yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }, this)\n  }, void 0, false);\n}\n_s(Edit, \"DcitcDmpEoNB1L1txWYNJbZlBCI=\", false, function () {\n  return [useOutletContext, useParams];\n});\n_c = Edit;\nexport default Edit;\nvar _c;\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"names":["useEffect","useState","useOutletContext","useParams","DateTimeP","ReactQuill","jsxDEV","_jsxDEV","Fragment","_Fragment","Edit","_s","getActiveNote","notes","id","note","setNote","JSON","parse","localStorage","getItem","index","findIndex","n","push","setItem","stringify","handleTitleChange","event","title","target","value","lastModified","Date","toLocaleString","handleContentChange","content","handleSave","setIsEditMode","handleDelete","confirmation","window","confirm","splice","nextNoteIndex","length","nextNoteId","setNoteId","isEditMode","children","className","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","readOnly","onClick","theme","toString","replace","_c","$RefreshReg$"],"sources":["/Users/huiyingzhen/Desktop/ENSF 381/assignment-06-lotion-huiyingzhen/src/Edit.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useOutletContext, useParams } from \"react-router-dom\";\nimport DateTimeP from 'react-datetime-picker';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\nfunction Edit(){\n    const [ getActiveNote, notes] = useOutletContext(); \n    const { id } = useParams();\n    const [note, setNote] = useState(null);\n    useEffect(() => {\n        const notes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n        const index = notes.findIndex((n) => n.id === id);\n        if(index >= 0){\n            setNote(notes[index]);\n        }\n    }, [id]);\n\n    useEffect(() => {\n        if (notes) {\n            const index = notes.findIndex((n) => n.id === id);\n            if (index >= 0) {\n                setNote(notes[index]);\n            }\n        }\n    }, [id, notes]);\n\n    useEffect(() => {\n        if (note) {\n            const notes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n            const index = notes.findIndex((n) => n.id === note.id);\n            if (index >= 0) {\n                notes[index] = note;\n            } else {\n                notes.push(note);\n            }\n            localStorage.setItem(\"notes\", JSON.stringify(notes));\n        }\n    }, [note]);\n    /*useEffect(() => {\n        const notes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n        const index = notes.findIndex((n) => n.id === id);\n        if(index >= 0){\n            setNote(notes[index]);\n        }\n    }, [id]);*/\n\n    /*useEffect(() => {\n        if(notes){\n            const index = notes.findIndex((n) => n.id === id);\n            if(index >= 0){\n                setNote(notes[index]);\n            }\n        }\n    }, [id, notes]);*/\n    /*useEffect(() => {\n        if (note) {\n          const notes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n          const index = notes.findIndex((n) => n.id === note.id);\n          if (index >= 0) {\n            notes[index] = note;\n          } else {\n            notes.push(note);\n          }\n          localStorage.setItem(\"notes\", JSON.stringify(notes));\n        }\n      }, [note]);*/\n\n    const handleTitleChange = (event) => {\n        setNote({\n            ...note,\n            title: event.target.value,\n            lastModified: new Date().toLocaleString(),\n        });\n    };\n\n    const handleContentChange = (content) => {\n        setNote({\n            ...note,\n            content,\n            lastModified: new Date().toLocaleString(),\n        });\n    };\n\n    /*const handleSave = () => {\n        const notes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n        const index = notes.findIndex((n) => n.id === note.id);\n        if(index >= 0){\n            notes[index] = note;\n        }else{\n            notes.push(note);\n        }\n        localStorage.setItem(\"notes\", JSON.stringify(notes));\n        setIsEditMode(false);\n    }*/\n    const handleSave = () => {\n        const notes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n        const index = notes.findIndex((n) => n.id === note.id);\n        if (index >= 0) {\n            // Update the existing note in the sidebar list with the new content\n            notes[index] = note;\n        } else {\n\n            notes.push(note);\n        }\n        localStorage.setItem(\"notes\", JSON.stringify(notes));\n        setIsEditMode(false);\n        \n        // Set the new note as the active note in the outlet context\n        getActiveNote(note);\n    }\n\n    const handleDelete = () => {\n  const notes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n  const index = notes.findIndex((n) => n.id === note.id);\n  if (index >= 0) {\n    const confirmation = window.confirm(\"Are you sure you want to delete this note?\");\n    if (confirmation) {\n      notes.splice(index, 1);\n      localStorage.setItem(\"notes\", JSON.stringify(notes));\n      const nextNoteIndex = index === notes.length ? index - 1 : index;\n      const nextNoteId = nextNoteIndex >= 0 ? notes[nextNoteIndex].id : '';\n      setNoteId(nextNoteId);\n    }\n  }\n};\n\n    /*const handleDelete = () => {\n        const notes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n        const index = notes.findIndex((n) => n.id === note.id);\n        if(index >= 0){\n            notes.splice(index, 1);\n            localStorage.setItem(\"notes\", JSON.stringify(notes));\n            const nextNoteIndex = index === notes.length ? index - 1 : index;\n            const nextNoteId = nextNoteIndex >= 0 ? notes[nextNoteIndex].id : '';\n            window.location.replace(`/notes/${nextNoteId}`);\n        }\n    };*/\n\n    const [isEditMode, setIsEditMode] = useState(true);\n\n    return(\n        <>\n        {notes && notes.length > 0 ? (\n                    <div className=\"main-notes\">\n                    <div className=\"main-header\">\n                        {isEditMode ? (\n                            <div className=\"header-left\">\n                                <div className=\"header-title\">\n                                    <input type=\"text\" value={note?.title} onChange={handleTitleChange}></input>\n                                </div>\n                                <div >\n                                    <DateTimeP value={new Date()} onChange={() => {}}/>\n                                </div>\n                            </div>\n                        ) : (\n                            <div className=\"header-left\">\n                            <div className=\"header-title\">\n                                <p type=\"text\" value={note.title} onChange={handleTitleChange}></p>\n                            </div>\n                            <div>\n                                <DateTimeP value={new Date()} onChange={() => {}} readOnly />\n                            </div>\n                        </div>\n                        )}\n        \n                        <div className=\"header-right\">\n                            {isEditMode ? (\n                                <button className=\"header-buttons\" onClick={handleSave}>Save</button>\n                            ) : (\n                                <button className=\"header-buttons\" onClick={() => setIsEditMode(true)}>Edit</button>\n                            )}\n                            <button className=\"header-buttons\" onClick={() => handleDelete(note.id)}>Delete</button>\n                        </div>\n                    </div>\n        \n                    {isEditMode ? (\n                        <div className=\"main-quill\">\n                            <ReactQuill theme=\"snow\" value={note?.content} onChange={handleContentChange}/>\n                        </div>\n                    ) : (\n                        <div className=\"main-note\">\n                            <p>{note.content.toString().replace( /(<([^>]+)>)/ig, '')}</p>\n                        </div>\n                    )}\n                </div>) : (\n                    <div>No notes yet.</div>\n        )}\n\n        </>\n    )\n}\n\nexport default Edit;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}