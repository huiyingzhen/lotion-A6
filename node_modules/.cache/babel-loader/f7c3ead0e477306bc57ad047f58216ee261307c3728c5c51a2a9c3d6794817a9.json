{"ast":null,"code":"var _jsxFileName = \"/Users/huiyingzhen/Desktop/ENSF 381/assignment-06-lotion-huiyingzhen/src/Edit.js\";\nimport { useEffect, useState } from \"react\";\nimport { useOutletContext, useParams } from \"react-router-dom\";\nimport DateTimeP from 'react-datetime-picker';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Edit() {\n  var _s = $RefreshSig$();\n  function Edit() {\n    _s();\n    const [onDeleteNote, getActiveNote, notes] = useOutletContext();\n    const {\n      id\n    } = useParams();\n    const [note, setNote] = useState(notes.find(note => note.id === id));\n    const [editMode, setEditMode] = useState(true);\n    useEffect(() => {\n      const notes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n      const index = notes.findIndex(n => n.id === id);\n      if (index >= 0) {\n        setNote(notes[index]);\n      }\n    }, [id]);\n    const handleTitleChange = event => {\n      setNote({\n        ...note,\n        title: event.target.value,\n        lastModified: new Date().toLocaleString()\n      });\n    };\n    const handleContentChange = content => {\n      setNote({\n        ...note,\n        content,\n        lastModified: new Date().toLocaleString()\n      });\n    };\n    const handleSave = () => {\n      const notes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n      const index = notes.findIndex(n => n.id === note.id);\n      if (index >= 0) {\n        notes[index] = note;\n      } else {\n        notes.push(note);\n      }\n      localStorage.setItem(\"notes\", JSON.stringify(notes));\n      setEditMode(true); // set editMode back to true after saving\n    };\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-notes\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-left\",\n            children: editMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"header-title\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: note.title,\n                  onChange: handleTitleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(DateTimeP, {\n                  value: new Date(),\n                  onChange: () => {}\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"header-title\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: note.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: new Date().toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-right\",\n            children: editMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"header-buttons\",\n                onClick: handleSave,\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"header-buttons\",\n                onClick: () => onDeleteNote(window.location.pathname.split('/')[2]),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"header-buttons\",\n                onClick: () => setEditMode(false),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"header-buttons\",\n                onClick: () => onDeleteNote(window.location.pathname.split('/')[2]),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-quill\",\n          children: /*#__PURE__*/_jsxDEV(ReactQuill, {\n            theme: \"snow\",\n            value: note.content,\n            onChange: handleContentChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-quill\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: note.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n  _s(Edit, \"caYE6rJ0avzAyhgyNjcsfS318uE=\", false, function () {\n    return [useOutletContext, useParams];\n  });\n}\n_c = Edit;\nexport default Edit;\nvar _c;\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"names":["useEffect","useState","useOutletContext","useParams","DateTimeP","ReactQuill","jsxDEV","_jsxDEV","Fragment","_Fragment","Edit","_s","$RefreshSig$","onDeleteNote","getActiveNote","notes","id","note","setNote","find","editMode","setEditMode","JSON","parse","localStorage","getItem","index","findIndex","n","handleTitleChange","event","title","target","value","lastModified","Date","toLocaleString","handleContentChange","content","handleSave","push","setItem","stringify","children","className","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","location","pathname","split","theme","_c","$RefreshReg$"],"sources":["/Users/huiyingzhen/Desktop/ENSF 381/assignment-06-lotion-huiyingzhen/src/Edit.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useOutletContext, useParams } from \"react-router-dom\";\nimport DateTimeP from 'react-datetime-picker';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\nfunction Edit(){\n    function Edit(){\n        const [onDeleteNote, getActiveNote, notes] = useOutletContext(); \n        const { id } = useParams();\n        const[note, setNote] = useState(notes.find((note) => note.id === id));\n        const [editMode, setEditMode] = useState(true);\n    \n        useEffect(() => {\n            const notes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n            const index = notes.findIndex((n) => n.id === id);\n            if(index >= 0){\n                setNote(notes[index]);\n            }\n        }, [id]);\n\n        const handleTitleChange = (event) => {\n            setNote({\n                ...note,\n                title: event.target.value,\n                lastModified: new Date().toLocaleString(),\n            });\n        };\n    \n        const handleContentChange = (content) => {\n            setNote({\n                ...note,\n                content,\n                lastModified: new Date().toLocaleString(),\n            });\n        };\n    \n        const handleSave = () => {\n            const notes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n            const index = notes.findIndex((n) => n.id === note.id);\n            if(index >= 0){\n                notes[index] = note;\n            }else{\n                notes.push(note);\n            }\n            localStorage.setItem(\"notes\", JSON.stringify(notes));\n            setEditMode(true); // set editMode back to true after saving\n        }\n    \n        return(\n            <>\n            <div className=\"main-notes\">\n                <div className=\"main-header\">\n                    <div className=\"header-left\">\n                        {editMode ? (\n                            <>\n                                <div className=\"header-title\">\n                                    <input type=\"text\" value={note.title} onChange={handleTitleChange}></input>\n                                </div>\n                                <div>\n                                    <DateTimeP value={new Date()} onChange={() => {}}/>\n                                </div>\n                            </>\n                        ) : (\n                            <>\n                                <div className=\"header-title\">\n                                    <span>{note.title}</span>\n                                </div>\n                                <div>\n                                    <span>{new Date().toLocaleString()}</span>\n                                </div>\n                            </>\n                        )}\n                    </div>\n    \n                    <div className=\"header-right\">\n                        {editMode ? (\n                            <>\n                                <button className=\"header-buttons\" onClick={handleSave}>Save</button>\n                                <button className=\"header-buttons\" onClick={() => onDeleteNote(window.location.pathname.split('/')[2])}>Delete</button>\n                            </>\n                        ) : (\n                            <>\n                                <button className=\"header-buttons\" onClick={() => setEditMode(false)}>Edit</button>\n                                <button className=\"header-buttons\" onClick={() => onDeleteNote(window.location.pathname.split('/')[2])}>Delete</button>\n                            </>\n                        )}\n                    </div>\n                </div>\n    \n                {editMode ? (\n                    <div className=\"main-quill\">\n                        <ReactQuill theme=\"snow\" value={note.content} onChange={handleContentChange}/>\n                    </div>\n                ) : (\n                    <div className=\"main-quill\">\n                        <span>{note.content}</span>\n                    </div>\n                )}\n            </div>\n            </>\n        )\n    }\n}\n    \n    export default Edit;\n    \n\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,gBAAgB,EAAEC,SAAS,QAAQ,kBAAkB;AAC9D,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,UAAU,MAAM,aAAa;AACpC,OAAO,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzC,SAASC,IAAIA,CAAA,EAAE;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACX,SAASF,IAAIA,CAAA,EAAE;IAAAC,EAAA;IACX,MAAM,CAACE,YAAY,EAAEC,aAAa,EAAEC,KAAK,CAAC,GAAGb,gBAAgB,EAAE;IAC/D,MAAM;MAAEc;IAAG,CAAC,GAAGb,SAAS,EAAE;IAC1B,MAAK,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAACc,KAAK,CAACI,IAAI,CAAEF,IAAI,IAAKA,IAAI,CAACD,EAAE,KAAKA,EAAE,CAAC,CAAC;IACrE,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;IAE9CD,SAAS,CAAC,MAAM;MACZ,MAAMe,KAAK,GAAGO,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE;MAC7D,MAAMC,KAAK,GAAGX,KAAK,CAACY,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACZ,EAAE,KAAKA,EAAE,CAAC;MACjD,IAAGU,KAAK,IAAI,CAAC,EAAC;QACVR,OAAO,CAACH,KAAK,CAACW,KAAK,CAAC,CAAC;MACzB;IACJ,CAAC,EAAE,CAACV,EAAE,CAAC,CAAC;IAER,MAAMa,iBAAiB,GAAIC,KAAK,IAAK;MACjCZ,OAAO,CAAC;QACJ,GAAGD,IAAI;QACPc,KAAK,EAAED,KAAK,CAACE,MAAM,CAACC,KAAK;QACzBC,YAAY,EAAE,IAAIC,IAAI,EAAE,CAACC,cAAc;MAC3C,CAAC,CAAC;IACN,CAAC;IAED,MAAMC,mBAAmB,GAAIC,OAAO,IAAK;MACrCpB,OAAO,CAAC;QACJ,GAAGD,IAAI;QACPqB,OAAO;QACPJ,YAAY,EAAE,IAAIC,IAAI,EAAE,CAACC,cAAc;MAC3C,CAAC,CAAC;IACN,CAAC;IAED,MAAMG,UAAU,GAAGA,CAAA,KAAM;MACrB,MAAMxB,KAAK,GAAGO,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE;MAC7D,MAAMC,KAAK,GAAGX,KAAK,CAACY,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACZ,EAAE,KAAKC,IAAI,CAACD,EAAE,CAAC;MACtD,IAAGU,KAAK,IAAI,CAAC,EAAC;QACVX,KAAK,CAACW,KAAK,CAAC,GAAGT,IAAI;MACvB,CAAC,MAAI;QACDF,KAAK,CAACyB,IAAI,CAACvB,IAAI,CAAC;MACpB;MACAO,YAAY,CAACiB,OAAO,CAAC,OAAO,EAAEnB,IAAI,CAACoB,SAAS,CAAC3B,KAAK,CAAC,CAAC;MACpDM,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;IACvB,CAAC;;IAED,oBACId,OAAA,CAAAE,SAAA;MAAAkC,QAAA,eACApC,OAAA;QAAKqC,SAAS,EAAC,YAAY;QAAAD,QAAA,gBACvBpC,OAAA;UAAKqC,SAAS,EAAC,aAAa;UAAAD,QAAA,gBACxBpC,OAAA;YAAKqC,SAAS,EAAC,aAAa;YAAAD,QAAA,EACvBvB,QAAQ,gBACLb,OAAA,CAAAE,SAAA;cAAAkC,QAAA,gBACIpC,OAAA;gBAAKqC,SAAS,EAAC,cAAc;gBAAAD,QAAA,eACzBpC,OAAA;kBAAOsC,IAAI,EAAC,MAAM;kBAACZ,KAAK,EAAEhB,IAAI,CAACc,KAAM;kBAACe,QAAQ,EAAEjB;gBAAkB;kBAAAkB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA;cAAS;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QACzE,eACN3C,OAAA;gBAAAoC,QAAA,eACIpC,OAAA,CAACH,SAAS;kBAAC6B,KAAK,EAAE,IAAIE,IAAI,EAAG;kBAACW,QAAQ,EAAEA,CAAA,KAAM,CAAC;gBAAE;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA;cAAE;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QACjD;YAAA,gBACP,gBAEH3C,OAAA,CAAAE,SAAA;cAAAkC,QAAA,gBACIpC,OAAA;gBAAKqC,SAAS,EAAC,cAAc;gBAAAD,QAAA,eACzBpC,OAAA;kBAAAoC,QAAA,EAAO1B,IAAI,CAACc;gBAAK;kBAAAgB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA;cAAQ;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QACvB,eACN3C,OAAA;gBAAAoC,QAAA,eACIpC,OAAA;kBAAAoC,QAAA,EAAO,IAAIR,IAAI,EAAE,CAACC,cAAc;gBAAE;kBAAAW,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA;cAAQ;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QACxC;YAAA;UAEb;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACC,eAEN3C,OAAA;YAAKqC,SAAS,EAAC,cAAc;YAAAD,QAAA,EACxBvB,QAAQ,gBACLb,OAAA,CAAAE,SAAA;cAAAkC,QAAA,gBACIpC,OAAA;gBAAQqC,SAAS,EAAC,gBAAgB;gBAACO,OAAO,EAAEZ,UAAW;gBAAAI,QAAA,EAAC;cAAI;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAAS,eACrE3C,OAAA;gBAAQqC,SAAS,EAAC,gBAAgB;gBAACO,OAAO,EAAEA,CAAA,KAAMtC,YAAY,CAACuC,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAE;gBAAAZ,QAAA,EAAC;cAAM;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAAS;YAAA,gBACxH,gBAEH3C,OAAA,CAAAE,SAAA;cAAAkC,QAAA,gBACIpC,OAAA;gBAAQqC,SAAS,EAAC,gBAAgB;gBAACO,OAAO,EAAEA,CAAA,KAAM9B,WAAW,CAAC,KAAK,CAAE;gBAAAsB,QAAA,EAAC;cAAI;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAAS,eACnF3C,OAAA;gBAAQqC,SAAS,EAAC,gBAAgB;gBAACO,OAAO,EAAEA,CAAA,KAAMtC,YAAY,CAACuC,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAE;gBAAAZ,QAAA,EAAC;cAAM;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAAS;YAAA;UAE9H;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACJ,EAEL9B,QAAQ,gBACLb,OAAA;UAAKqC,SAAS,EAAC,YAAY;UAAAD,QAAA,eACvBpC,OAAA,CAACF,UAAU;YAACmD,KAAK,EAAC,MAAM;YAACvB,KAAK,EAAEhB,IAAI,CAACqB,OAAQ;YAACQ,QAAQ,EAAET;UAAoB;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC5E,gBAEN3C,OAAA;UAAKqC,SAAS,EAAC,YAAY;UAAAD,QAAA,eACvBpC,OAAA;YAAAoC,QAAA,EAAO1B,IAAI,CAACqB;UAAO;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAQ;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAElC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACC,iBACH;EAEX;EAACvC,EAAA,CA/FQD,IAAI;IAAA,QACoCR,gBAAgB,EAC9CC,SAAS;EAAA;AA8FhC;AAACsD,EAAA,GAjGQ/C,IAAI;AAmGT,eAAeA,IAAI;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}